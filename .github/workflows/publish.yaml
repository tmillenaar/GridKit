name: Publish to PyPI
on:
  push:
    tags:
      - "*"

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, x86, aarch64, armv7, s390x, ppc64le]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Set the gridkit version in version.py to that of the tag
        run: sed -i -r "s|\"[[:alnum:]]+\.[[:alnum:]]+\.[[:alnum:]]+.+|\"${GITHUB_REF/refs\/tags\//}\"|" ./gridkit/version.py; cat ./gridkit/version.py
        working-directory: ./gridkit-py
      - name: Set the gridkit version in pyproject.toml to that of the tag
        run: sed -i -r "s|version = \"[[:alnum:]]+\.[[:alnum:]]+\.[[:alnum:]]+.+|version = \"${GITHUB_REF/refs\/tags\//}\"|" ./pyproject.toml; cat ./pyproject.toml
        working-directory: ./gridkit-py
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: -m ./gridkit-py --release --out dist --find-interpreter
          sccache: "true"
          manylinux: auto
        env:
          PYO3_USE_ABI3_FORWARD_COMPATIBILITY: "1"
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: gridkit-py/dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          architecture: ${{ matrix.target }}
      - name: Set the gridkit version in version.py to that of the tag
        run: (Get-Content -Path .\gridkit\version.py -Raw) -replace '\"[0-9]+\.[0-9]+\.[0-9]+.+', ('"{0}"' -f ($env:GITHUB_REF -replace 'refs/tags/','')) | Set-Content -Path .\gridkit\version.py ; Get-Content .\gridkit\version.py
        working-directory: ./gridkit-py
      - name: Set the gridkit version in pyproject.toml to that of the tag
        run: (Get-Content -Path .\pyproject.toml -Raw) -replace 'version = "[0-9]+\.[0-9]+\.[0-9]+.+', ('version = "{0}"' -f ($env:GITHUB_REF -replace 'refs/tags/','')) | Set-Content -Path .\pyproject.toml ; Get-Content .\pyproject.toml
        working-directory: ./gridkit-py
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: -m ./gridkit-py --release --out dist --find-interpreter
          sccache: "true"
        env:
          PYO3_USE_ABI3_FORWARD_COMPATIBILITY: "1"
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: gridkit-py/dist

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Set the gridkit version in version.py to that of the tag
        run: sed -i -r "s|\"[[:alnum:]]+\.[[:alnum:]]+\.[[:alnum:]]+.+|\"${GITHUB_REF/refs\/tags\//}\"|" ./gridkit/version.py; cat ./gridkit/version.py
        working-directory: ./gridkit-py
      - name: Set the gridkit version in pyproject.toml to that of the tag
        run: sed -i -r "s|version = \"[[:alnum:]]+\.[[:alnum:]]+\.[[:alnum:]]+.+|version = \"${GITHUB_REF/refs\/tags\//}\"|" ./pyproject.toml; cat ./pyproject.toml
        working-directory: ./gridkit-py
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: -m ./gridkit-py --release --out dist --find-interpreter
          sccache: "true"
        env:
          PYO3_USE_ABI3_FORWARD_COMPATIBILITY: "1"
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: gridkit-py/dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set the gridkit version in version.py to that of the tag
        run: sed -i -r "s|\"[[:alnum:]]+\.[[:alnum:]]+\.[[:alnum:]]+.+|\"${GITHUB_REF/refs\/tags\//}\"|" ./gridkit/version.py; cat ./gridkit/version.py
        working-directory: ./gridkit-py
      - name: Set the gridkit version in pyproject.toml to that of the tag
        run: sed -i -r "s|version = \"[[:alnum:]]+\.[[:alnum:]]+\.[[:alnum:]]+.+|version = \"${GITHUB_REF/refs\/tags\//}\"|" ./pyproject.toml; cat ./pyproject.toml
        working-directory: ./gridkit-py
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: -m ./gridkit-py --out dist
        env:
          PYO3_USE_ABI3_FORWARD_COMPATIBILITY: "1"
      - name: Test installing dist
        run: |
          pip install --force-reinstall --verbose gridkit-py/dist/*.tar.gz
          cd ..
          python -c "import gridkit"
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: gridkit-py/dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [linux, windows, macos, sdist]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.GRIDKIT_PYPI_TOKEN }}
        with:
          command: upload
          args: -m gridkit-py/pyproject.toml --non-interactive --skip-existing gridkit-py/dist/*
